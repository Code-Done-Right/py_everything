**********
gitIt
**********

Basic Usage:
============

.. code:: bash

   $ ls
   repo/
   $ cd repo/
   $ ls -a
   . ..
   $ gitIt -gh --docs --issue --c --greet
   <--Follow the prompts(prompt values - repo-name, description-for-repo, MIT)-->
   $ ls -a
   . .. .git/ .github/ docs/ README.md LICENSE .gitignore
   $ cd .github/

   $ ls -a
   . .. SECURITY.md workflows/ ISSUE_TEMPLATE/
   $ cd workflows/
    
   $ ls -a
   . .. greet.yml
   $ cd ..

   $ cd ISSUE_TEMPLATE/
    
   $ ls -a
   . .. bug-report.md feature-or-enhancement-request.md config.yml
   $ cd ../..
    
   $ cat README.md
   # repo-name

    description-for-repo

    License - MIT

Flags:
======
There are many flags for gitIt. They can be used as per requirements.

* -gh or --github
* -d or --docs
* -s or --security
* -i or --issue
* -c or --config
* --greet

All of these flags are optional. But very few data is taken input after running.

-gh or --github
================
The -gh or --github flag is used to generate the .github folder in the structure. It is usually
combined with the -i or --issue flag for best results. 

-d or --docs
=============
The -d or --docs flag generates a docs/ folder in the project structure.

-s or --security
=================
The -s or --security flag is used to generate a SECURITY.md file in .github/ for the security policy. It is prefilled with placeholder data.

-i or --issue
==============
The -i or --issue flag is used to generate issue templates  in .github/. Bug report and feature request templates with placeholder data are generated by default. Works when used with -gh or --github flag.

-c or --config
===============
The -c or --config flag is used to generate confg.yml in .github/ISSUE_TEMPLATE/. config.yml is generated with placeholder data. Works when used with -gh and -i flags.

--greet
========
The --greet flag is used to generate greet.yml in .github/workflows/. greet.yml is generated with data(not placeholder). Works when used with -gh flag.

Note:
=====
gitIt, is a command-line utility seperate from the rest of the package.

It cannot be run using `$ python -m gitIt`. It gives an error. It can only be run using `$ gitIt`.

It's help utility can be accessed by using the command `$ gitIt -h` or `$ gitIt --help`.

If you want to enable a flag just use "-flag", for e.g., - `$ gitIt -t`. Do not specify True or False.
